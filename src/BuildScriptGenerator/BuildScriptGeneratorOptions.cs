// --------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// --------------------------------------------------------------------------------------------
using Microsoft.Extensions.Logging;

namespace Microsoft.Oryx.BuildScriptGenerator
{
    public class BuildScriptGeneratorOptions
    {
        /// <summary>
        /// The path to the directory containing source code.
        /// </summary>
        public string SourceCodeFolder { get; set; }

        /// <summary>
        /// The path to the directory which will act as an intermediate directory for building the source code before
        /// the output is finally put into <see cref="OutputFolder"/>.
        /// </summary>
        public string IntermediateFolder { get; set; }

        /// <summary>
        /// Gets or sets the flag which indicates if an intermediate folder should be used to first copy the source
        /// folder content and work on it.
        /// </summary>
        public bool DoNotUseIntermediateFolder { get; set; }

        /// <summary>
        /// The path to the directory containing the final output of building the source code.
        /// </summary>
        public string OutputFolder { get; set; }

        /// <summary>
        /// The name of the language that the code in <see cref="SourceCodeFolder"/> has.
        /// </summary>
        public string LanguageName { get; set; }

        /// <summary>
        /// The version of the language that the code in <see cref="SourceCodeFolder"/> has.
        /// </summary>
        public string LanguageVersion { get; set; }

        /// <summary>
        /// The temporary directory under which all temporary files generated by this tool are put in.
        /// </summary>
        public string TempDirectory { get; set; }

        /// <summary>
        /// The file to which logs have to be written to.
        /// </summary>
        public string LogFile { get; set; }

        /// <summary>
        /// The minimum log level at which logs have to be written.
        /// </summary>
        public LogLevel MinimumLogLevel { get; set; }
    }
}