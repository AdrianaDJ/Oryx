resources:
- repo: self

variables:
- group: Oryx

stages:
  - stage: CreateReleaseTag
    jobs:
    - job: CreateReleaseTag
      pool:
        name: OryxLinux
      variables:
        skipComponentGovernanceDetection: true
      steps:
      - task: ShellScript@2
        inputs:
          scriptPath: ./vsts/scripts/createReleaseTag.sh
        displayName: 'Create release tag'
      - script: |
          set -ex
          sourcesArtifactsDir="$(Build.SourcesDirectory)/artifacts"
          mkdir -p "$sourcesArtifactsDir"
          echo "$(RELEASE_TAG_NAME)" > "$sourcesArtifactsDir/releaseTag.txt"
        displayName: 'Write release tag'
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)/artifacts/releaseTag.txt
          artifactName: releaseTag

  - stage: Build
    displayName: Build Stage
    dependsOn: CreateReleaseTag
    jobs:
    - job: Job_Security
      displayName: Security
      condition: succeeded()
      pool:
        name: Hosted VS2017
      steps:
      - template: templates/_securityChecks.yml

    - job: Job_SignBinaries
      displayName: Sign Oryx Binaries
      pool:
        name: VSEng-MicroBuildVS2017
        demands:
        - msbuild
        - visualstudio
      variables:
        SignType: 'test'
        skipComponentGovernanceDetection: true
      steps:
      - powershell: |
          gci env:* | sort-object name
          Write-Host "This is $env:Build.SourcesDirectory"
          $file = "artifacts\releaseTag\releaseTag.txt"
          if (Test-Path $file) {
            $tagName = [IO.File]::ReadAllText($file)
            echo "##vso[task.setvariable variable=RELEASE_TAG_NAME;isOutput=true]$tagName"
          }
        displayName: 'Set RELEASE_TAG_NAME as environment variable'
      - template: templates/_signBinary.yml

    - job: Job_BuildImage
      displayName: Build and Test Build Image
      dependsOn: Job_SignBinaries
      condition: succeeded()
      timeoutInMinutes: 120
      pool:
        name: OryxLinux
      variables:
        SignType: $[ dependencies.Job_SignBinaries.outputs['setSignTypeVariable.SignType'] ]  # map in the signtype variable
        skipComponentGovernanceDetection: true

      steps:
      - script: |
          echo "##vso[task.setvariable variable=BuildBuildImages;]true"
          echo "##vso[task.setvariable variable=TestBuildImages;]true"
          echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
          echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
          echo "##vso[task.setvariable variable=PushBuildImages;]true"
          echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
          echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]true"
        displayName: 'Set variables'
      
      - template: templates/steps/_setReleaseTag.yml

      - template: templates/_buildTemplate.yml

    - job: Job_RuntimeImages
      displayName: Build and Test Runtime Images
      dependsOn: Job_SignBinaries
      condition: succeeded()
      timeoutInMinutes: 120
      pool:
        name: OryxLinux
      variables:
        SignType: $[ dependencies.Job_SignBinaries.outputs['setSignTypeVariable.SignType'] ]  # map in the signtype variable
        skipComponentGovernanceDetection: true

      steps:
      - script: |
          echo "##vso[task.setvariable variable=BuildBuildImages;]false"
          echo "##vso[task.setvariable variable=TestBuildImages;]false"
          echo "##vso[task.setvariable variable=BuildRuntimeImages;]true"
          echo "##vso[task.setvariable variable=TestRuntimeImages;]true"
          echo "##vso[task.setvariable variable=PushRuntimeImages;]true"
          echo "##vso[task.setvariable variable=PushBuildImages;]false"
          echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]true"
        displayName: 'Set variables'

      - template: templates/steps/_setReleaseTag.yml

      - template: templates/_buildTemplate.yml

    - template: templates/_integrationJobTemplate.yml
  
  - stage: Release
    displayName: Release Stage
    dependsOn: Build
    condition: >
      and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), 
      startsWith(variables['Build.SourceBranch'],'refs/heads/patch/' )))

    jobs:
    - job: SetReleaseTag
      pool:
        name: OryxLinux
      steps:
      - template: templates/steps/_setReleaseTag.yml
    
    - template: templates/_releaseJobTemplate.yml

trigger: none